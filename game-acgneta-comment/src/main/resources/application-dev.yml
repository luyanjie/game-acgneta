server:
  port: 8089
spring:
  datasource:
    game2element:
      url: jdbc:mysql://192.168.40.6:3306/Game2Element?useUnicode=true&characterEncoding=utf-8&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&allowMultiQueries=true
      username: servergroup
      password: tongbuserver
      driverClassName: com.mysql.cj.jdbc.Driver
  mvc:
    throw-exception-if-no-handler-found: true  # 出现错误时, 直接抛出异常
  resources:
    add-mappings: false #不要为我们工程中的资源文件建立映射
  data:
    mongodb:
      uri: mongodb://192.168.40.6:27017/game2element_dynamics # 没有设置密码的，设置密码的： spring.data.mongodb.uri=mongodb://account:password@192.168.1.180:27017/test
  cloud:
    stream:
      kafka:
        binder:
          brokers: 192.168.40.155:9092 #Kafka的消息中间件服务器,多个用逗号隔开
          #zk-nodes: 192.168.40.155:2181 # #Zookeeper的节点，如果集群，后面加,号分隔 spring cloud 2.0版本以后就不需要了
          auto-create-topics: true # 如果设置为false,就不会自动创建Topic 有可能你Topic还没创建就直接调用了。
          auto-add-partitions: true
          min-partition-count: 1
      bindings: # 可以设置多个主题
        dynamicOutput: # 发消息的通道名称, 这里用stream给我们提供的默认output，自定义为dynamicOutput
          destination: dynamic #消息发往的目的地(主题)
          content-type: text/plain #消息发送的格式，接收端不用指定格式，但是发送端要
mybatis:
  config-location: classpath:mybatis/mybatis-config.xml
umeng:
  ios:
    mode: false
springfox:
  documentation:
    swagger:
      v2:
        path: /api-docs
swagger:
  enable: true
logging:
  config: classpath:log/logback-dev.xml

api:
  boot:
    redis:
      standAlone:
        offline:
          host: 192.168.40.155
          redisPort: 6379
          password: tongbuserver
          database: 5
          timeout: 3000
          max-total: 10
          max-wait: 3000
          max-idle: 10
        online:
          host: 113.107.248.206
          redisPort: 6379
          password: D71fqaX2tGgEHr0rt5vEPFy
          database: 5
          timeout: 3000
          max-total: 10
          max-wait: 3000
          max-idle: 10
